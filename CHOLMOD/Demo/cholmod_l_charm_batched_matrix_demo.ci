mainmodule cholmod_l_charm_batched_matrix_demo
{
    include "cholmod_demo.h";

    readonly CProxy_main mainProxy;
    readonly size_t cm_queue [ CUDA_GPU_NUM ];

    readonly int prefer_zomplex;

    mainchare main
    {
        entry main (CkArgMsg *msg);
        entry void initialize ();
        entry void destroy ();
        entry void mark_device (int GPUindex);
        entry [sync] int get_device_mark (int GPUindex);
        entry [sync] int lock_gpu (int GPUindex);
        entry [sync] void unlock_gpu (int GPUindex);
        entry void destroy_gpu_lock (int GPUindex);
        entry void mark_file (int findex);
        entry [sync] int get_file_mark (int findex);
        entry [sync] std::string get_filename (int findex);
        entry void exit_main ();
    };

    array [1D] file_struct
    {
        entry file_struct (void);
        entry void initialize (int nGPUs);
        entry void analyze ();
        entry void factorize ();
        entry void destroy (int nfiles);
        entry [threaded] void cholesky (int nGPUs, int nfiles);
    };

    array [1D] front_struct
    {
        entry front_struct (void);
        entry [local] void initialize (int nGPUs, cholmod_factor *L);
        entry [threaded] void front_cholesky (int nGPUs, size_t L);
    };
};
